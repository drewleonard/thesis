install.packages(tidyverse)
install.packages("tidyverse")
Library(tidyverse)
library(tidyverse)
install.packages("swirl")
library(swirl)
swirl()
rm(list=ls())
setwd("~/Documents/thesis/data/rds/")
library(stm)
library(tidyverse)
library(plyr)
# Read and process CSV file
fb <- read.csv('../csv/fb_metadata.csv')
processed <- readRDS("fb_metadata_processed.RDS")
out <- prepDocuments(processed$documents, processed$vocab, processed$meta)
docs <- out$documents
vocab <- out$vocab
meta <- out$meta
# Read STM RDA object
stm <- readRDS("./fit_25_fb_metadata.RDA")
# Get and cast theta object from STM
theta <- stm$theta
thetadf <- as.data.frame(theta)
# Name thetadf columns
names(thetadf) <- c("racial justice_0", "civil rights", "social media activism", "civil liberties", "self defense",
"mixed_0", "war / police protest", "mixed_1", "social justice", "racial justice_1", "political scandal",
"domestic crime", "black empowerment_0", "election / rally", "police brutality_0", "racial justice_2",
"police brutality_1", "conservative pride", "police brutality_2", "illegal immigration", "black empowerment_1",
"music", "mixed_2", "mixed_3", "mixed_4")
# Bind thetadf to full fb dataframe
topics <- cbind(thetadf, out$meta[,"AdID"])
topics <- as.data.frame(topics)
full <- left_join(fb, topics,  by=c("AdID" = "out$meta[, \"AdID\"]"))
# Column for each ad's primary topic
full$"primary_topic" <- colnames(full[,c(11:35)])[max.col(full[,c(11:35)],ties.method="first")]
# Colum for formatted date
full$"formatted_date" <- as.Date(strptime(full$CreationDate, "%m/%d/%y %H:%M:%S"))
# Dataframe counting topic proportions by day
full_timeseries <- count(full, c('primary_topic','formatted_date'))
# Plot topic proportions by day
ggplot(full_timeseries, aes(formatted_date, freq)) +
geom_line() +
xlab("Topic") +
ylab("Day") +
ggtitle("Topic frequency by day") +
facet_wrap( ~ primary_topic, ncol=4)
# Count documents per topic
full_counts <- count(full, c('primary_topic'))
ggplot(full_counts, aes(x=primary_topic, y=freq)) +
geom_bar(stat="identity") +
xlab("Topic") +
ylab("Frequency") +
ggtitle("Topics by frequency") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(full_counts, aes(x=primary_topic, y=freq)) +
geom_bar(stat="identity") +
xlab("Topic") +
ylab("Frequency") +
ggtitle("Topics by frequency") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(full)
View(full)
View(full_counts)
View(fb)
# Topics by clicks
ggplot(full, aes(y=Clicks,x=formatted_date)) +
geom_point() +
facet_wrap( ~ primary_topic, ncol=4)
# Topics by clicks
ggplot(full, aes(y=Clicks,x=primary_topic)) +
geom_point()
# Topics by clicks
ggplot(full, aes(y=Clicks,x=primary_topic)) +
geom_point() +
xlab("Topic") +
ylab("Clicks") +
ggtitle("Topics by clicks") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Topics by clicks
ggplot(full, aes(y=log(Clicks),x=primary_topic)) +
geom_point() +
xlab("Topic") +
ylab("Clicks") +
ggtitle("Topics by clicks") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Topics by clicks
ggplot(full, aes(x=primary_topic,y=Clicks)) +
geom_point() +
xlab("Topic") +
ylab("Clicks") +
ggtitle("Topics by clicks") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Topics by clicks
ggplot(full, aes(x=primary_topic,y=Impressions)) +
geom_point() +
xlab("Topic") +
ylab("Clicks") +
ggtitle("Topics by clicks") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
