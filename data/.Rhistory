install.packages(tidyverse)
install.packages("tidyverse")
Library(tidyverse)
library(tidyverse)
install.packages("swirl")
library(swirl)
swirl()
clear
clear()
rm
rm()
rm(list=ls())
setwd("~/Documents/learning-stm/data/")
setwd("~/Documents/learning-stm/data/")
rm(list=ls())
rm(list=ls())
rm(list=ls())
setwd("~/Documents/learning-stm/data/")
library(stmCorrViz) # Package for hierarchical correlation view of STMs
library(stm)        # Package for sturctural topic modeling
library(igraph)     # Package for network analysis and visualisation
library(stmCorrViz) # Package for hierarchical correlation view of STMs
data <- read.csv("poliblogs2008.csv")
load("VignetteObjects.RData")
View(data)
processed <- textProcessor(data$documents, metadata=data)
rm(list=ls())
setwd("~/Documents/thesis/")
library(stm)        # Package for sturctural topic modeling
library(igraph)     # Package for network analysis and visualisation
library(stmCorrViz) # Package for hierarchical correlation view of STMs
data <- read.csv("fdc.csv")
View(data)
processed <- textProcessor(data$ad_text, metadata=data)
out <- prepDocuments(processed$documents, processed$vocab, processed$meta)
docs <- out$documents
vocab <- out$vocab
meta <- out$meta
fdcPrevFit <- stm(out$documents, out$vocab, prevalence=~rating+s(day),
max.em.its=75, data=out$meta, init.type="Spectral",
seed=8458159)
fdcPrevFit <- stm(out$documents, out$vocab, K=10, prevalence=~rating+s(day),
max.em.its=75, data=out$meta, init.type="Spectral",
seed=8458159)
fdcPrevFit <- stm(out$documents, out$vocab, K=10,
data=out$meta, init.type="Spectral",
seed=8458159)
plot(fdcPrevFit, type="labels", topics=c(3,7,10))
plot(fdcPrevFit, type="labels", topics=c(3,10))
plot(fdcPrevFit, type="labels", topics=c(3,10))
plot(fdcPrevFit, type="labels", topics=c(1))
plot(fdcPrevFit, type="summary", xlim=c(0,.4))
fdcPrevFit <- stm(out$documents, out$vocab, K=10,
data=out$meta)
plot(fdcPrevFit, type="summary", xlim=c(0,.4))
View(out)
fdcPrevFit <- stm(out$documents, out$vocab, K=10,max.em.its=75, data=out$meta)
fdcPrevFit <- stm(out$documents, out$vocab, K=20,max.em.its=75, data=out$meta)
plot(fdcPrevFit, type="summary", xlim=c(0,.4))
fdcPrevFit <- stm(out$documents, out$vocab, K=15, max.em.its=75, data=out$meta)
plot(fdcPrevFit, type="summary", xlim=c(0,.4))
fdcPrevFit <- stm(out$documents, out$vocab, K=20, max.em.its=75, data=out$meta)
plot(poliblogPrevFit, type="labels", topics=c(7,8,14))
plot(fdcPrevFit, type="labels", topics=c(7,8,14))
data <- read.csv("fdc.csv")
processed <- textProcessor(data$ad_text, metadata=data)
out <- prepDocuments(processed$documents, processed$vocab, processed$meta)
docs <- out$documents
vocab <- out$vocab
meta <- out$meta
fdcPrevFit <- stm(out$documents, out$vocab, K=20, max.em.its=75, data=out$meta)
plot(fdcPrevFit, type="summary", xlim=c(0,.4))
plot(fdcPrevFit, type="labels", topics=c(3,11,8,12,17))
fdcPrevFit <- stm(out$documents, out$vocab, K=20, data=out$meta)
plot(fdcPrevFit, type="summary", xlim=c(0,.4))
plot(fdcPrevFit, type="labels", topics=c(3,11))
plot(fdcPrevFit, type="labels", topics=c(18,10,19))
plot(fdcPrevFit, type="summary", xlim=c(0,.4))
plot(fdcPrevFit, type="labels", topics=c(4))
library(pickle)
rm(list=ls())
setwd("~/Documents/thesis/data/")
library(stm)        # Package for sturctural topic modeling
library(igraph)     # Package for network analysis and visualisation
library(stmCorrViz) # Package for hierarchical correlation view of STMs
data <- read.csv("./csv/fdc.csv")
data <- read.csv("./csv/fdc_1_3.csv")
processed <- textProcessor(data$ad_text, metadata=data)
out <- prepDocuments(processed$documents, processed$vocab, processed$meta)
apply.stm <- function(name, path, n) {
# Read data into object
data <- read.csv(path)
# Pre-process data
processed <- textProcessor(data$ad_text, metadata=data)
out <- prepDocuments(processed$documents, processed$vocab, processed$meta)
# Pull data
docs <- out$documents
vocab <- out$vocab
meta <- out$meta
# Apply STM
fit <- stm(out$documents, out$vocab, K=20, data=out$meta)
}
apply.stm <- function(path, n) {
# Read data into object
data <- read.csv(path)
# Pre-process data
processed <- textProcessor(data$ad_text, metadata=data)
out <- prepDocuments(processed$documents, processed$vocab, processed$meta)
# Pull data
docs <- out$documents
vocab <- out$vocab
meta <- out$meta
# Apply STM
fit <- stm(out$documents, out$vocab, K=20, data=out$meta)
}
apply.stm <- function(path, n) {
# Read data into object
data <- read.csv(path)
# Pre-process data
processed <- textProcessor(data$ad_text, metadata=data)
out <- prepDocuments(processed$documents, processed$vocab, processed$meta)
# Pull data
docs <- out$documents
vocab <- out$vocab
meta <- out$meta
# Apply STM
fit <- stm(out$documents, out$vocab, K=n, data=out$meta)
}
fdc_1_3 <- apply.stm("./csv/fdc_1_3.csv", 20)
saveRDS(fdc_1_3, file = "fdc_1_3.rds")
plot(fdc_1_3, type="summary", xlim=c(0,.4))
newfit <- readRDS(file = "fdc_1_3.rds")
plot(newfit, type="summary", xlim=c(0,.4))
plot(newfit, type="labels", topics=c(4))
fdc_1_2 <- apply.stm("./csv/fdc_1_2.csv", 20)
summary
plot(fdc_1_2, type="summary", xlim=c(0,.4))
plot(fdc_1_2, type="summary", xlim=c(0,1))
saveRDS(fdc_1_2, file = "fdc_1_2.rds")
fdc_alt <- apply.stm(".csv/fdc_alt.csv", 20)
fdc_alt <- apply.stm("./csv/fdc_alt.csv", 20)
fdc_alt <- apply.stm("./csv/fdc_alt.csv", 20)
plot(fdc_1_3, type="summary", xlim=c(0,1))
plot(fdc_1_2, type="summary", xlim=c(0,1))
labelTopics(fdc_1_3)
