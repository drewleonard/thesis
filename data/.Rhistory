G <- as.data.frame(G)
# Setting power variables
u <- 16
n.actual <- length(G)
v.actual <- n.actual - u - 1
f2 <- r_squared / (1-r_squared)
sig.level <- 0.05
power <- 0.8
# Calculating power
#  u: n coefficients
#  v: n error degrees of freedom
#     v=n-u-1
#  n: n observations
#     n=v+u+1
# f2: effect size
#     R^2/(1-R^2)
# Get necessary observations for detecting null effect
power.n <- pwr.f2.test(u = u, f2 = f2, sig.level = sig.level, power = power)
estimate.n <- round(power.n$v) + u + 1
# Get power given my number of observations
power.power <- pwr.f2.test(u = u, v = v.actual, f2 = f2, sig.level = sig.level)
estimate.power <- power.power$power
print(paste("Required n:",estimate.n))
print(paste("Power with supplied n:",estimate.power))
}
source("../src/R/survey/survey_analysis_helper.R")
# Power analysis
power.linear <- get_power_analysis_linear(sibp.amce.model, G)
# Function for calculating power, linear
get_power_analysis_linear <-
function(amce_model, G) {
# Get model summary
model_summary <- summary(amce_model)
r_squared <- model_summary$r.squared
# Convert G to data.frame
G <- as.data.frame(G)
# Setting power variables
u <- 16
n.actual <- length(G)
v.actual <- n.actual - u - 1
f2 <- r_squared / (1-r_squared)
sig.level <- 0.05
power <- 0.8
# Calculating power
#  u: n coefficients
#  v: n error degrees of freedom
#     v=n-u-1
#  n: n observations
#     n=v+u+1
# f2: effect size
#     R^2/(1-R^2)
# Get necessary observations for detecting null effect
power.n <- pwr.f2.test(u = u, f2 = f2, sig.level = sig.level, power = power)
estimate.n <- round(power.n$v) + u + 1
print(v.actual)
# Get power given my number of observations
# power.power <- pwr.f2.test(u = u, v = v.actual, f2 = f2, sig.level = sig.level)
# estimate.power <- power.power$power
# print(paste("Required n:",estimate.n))
# print(paste("Power with supplied n:",estimate.power))
}
source("../src/R/survey/survey_analysis_helper.R")
# Power analysis
get_power_analysis_linear(sibp.amce.model, G)
# Function for calculating power, linear
get_power_analysis_linear <-
function(amce_model, G) {
# Get model summary
model_summary <- summary(amce_model)
r_squared <- model_summary$r.squared
# Convert G to data.frame
G <- as.data.frame(G)
# Setting power variables
u <- 16
n.actual <- nrow(G)
v.actual <- n.actual - u - 1
f2 <- r_squared / (1-r_squared)
sig.level <- 0.05
power <- 0.8
# Calculating power
#  u: n coefficients
#  v: n error degrees of freedom
#     v=n-u-1
#  n: n observations
#     n=v+u+1
# f2: effect size
#     R^2/(1-R^2)
# Get necessary observations for detecting null effect
power.n <- pwr.f2.test(u = u, f2 = f2, sig.level = sig.level, power = power)
estimate.n <- round(power.n$v) + u + 1
print(v.actual)
# Get power given my number of observations
# power.power <- pwr.f2.test(u = u, v = v.actual, f2 = f2, sig.level = sig.level)
# estimate.power <- power.power$power
# print(paste("Required n:",estimate.n))
# print(paste("Power with supplied n:",estimate.power))
}
source("../src/R/survey/survey_analysis_helper.R")
# Power analysis
get_power_analysis_linear(sibp.amce.model, G)
# Function for calculating power, linear
get_power_analysis_linear <-
function(amce_model, G) {
# Get model summary
model_summary <- summary(amce_model)
r_squared <- model_summary$r.squared
# Convert G to data.frame
G <- as.data.frame(G)
# Setting power variables
u <- 16
n.actual <- nrow(G)
v.actual <- n.actual - u - 1
f2 <- r_squared / (1-r_squared)
sig.level <- 0.05
power <- 0.8
# Calculating power
#  u: n coefficients
#  v: n error degrees of freedom
#     v=n-u-1
#  n: n observations
#     n=v+u+1
# f2: effect size
#     R^2/(1-R^2)
# Get necessary observations for detecting null effect
power.n <- pwr.f2.test(u = u, f2 = f2, sig.level = sig.level, power = power)
estimate.n <- round(power.n$v) + u + 1
# Get power given my number of observations
power.power <- pwr.f2.test(u = u, v = v.actual, f2 = f2, sig.level = sig.level)
estimate.power <- power.power$power
print(paste("Required n:",estimate.n))
print(paste("Power with supplied n:",estimate.power))
}
source("../src/R/survey/survey_analysis_helper.R")
# Power analysis
get_power_analysis_linear(sibp.amce.model, G)
power.anova.test(groups=4,
n=NULL,
between.var=anova(sibp.amce.model)["group", "Mean Sq"],
within.var=anova(sibp.amce.model)["Residuals", "Mean Sq"],
sig.level=0.05,
power=0.80)
tanova(sibp.amce.model)["group", "Mean Sq"]
anova(sibp.amce.model)["group", "Mean Sq"]
anova(sibp.amce.model)["Residuals", "Mean Sq"]
anova(sibp.amce.model)
power.anova.test(groups=4,
n=NULL,
between.var=anova(sibp.amce.model)["as.matrix(G.test)", "Mean Sq"],
within.var=anova(sibp.amce.model)["Residuals", "Mean Sq"],
sig.level=0.05,
power=0.80)
power.anova.test(groups=4,
n=NULL,
between.var=anova(sibp.amce.model)["rhsmat ", "Mean Sq"],
within.var=anova(sibp.amce.model)["Residuals", "Mean Sq"],
sig.level=0.05,
power=0.80)
# Power analysis
get_power_analysis_linear(sibp.amce.model, G)
anova(sibp.amce.model)
tstats <- coef(sibp.amce.model) / sqrt(diag(vcov(sibp.amce.model)))
tstats
summary(sibp.amce.model)
pwr.anova.test(k = 12, f = 0.25, sig.level = 0.01, power = 0.9)
summary(sibp.amce.model)
pwr.f2.test(u = 16, v = 1000, f2 = 0.004789/(1-0.004789), sig.level = 0.05)
# Power analysis
get_power_analysis_linear(sibp.amce.model, G)
rm(list = ls())
setwd('~/Documents/thesis/data/')
load('./rdata/survey_analysis_efficacy.RData')
source("../src/R/survey/survey_analysis_helper.R")
#pdf('./figures/survey_analysis_efficacy_effects.pdf')
draw_treatment_effects(
sibp.amce = sibp.amce,
treatments = c("Dangerous Society",  "Black Pride", "Identity Support"),
groups_title = "",
effect_title = "Political Efficacy",
xlim_l = -1.5,
xlim_u = 1.5
)
format_treatment_effects(
sibp.amce = sibp.amce,
treatments = c("Dangerous Society",  "Black Pride", "Identity Support")
)
sibp.amce.model <- get_amce_model(sibp.fit, X, Y, G = G)
# Power analysis
get_power_analysis_linear(sibp.amce.model, G)
rm(list = ls())
setwd('~/Documents/thesis/data/')
load('./rdata/survey_analysis_partisan.RData')
source("../src/R/survey/survey_analysis_helper.R")
format_treatment_effects(
sibp.amce = sibp.amce,
treatments = c("Dangerous Society", "Black Pride", "Identity Support")
)
# Power analysis
get_power_analysis_linear(sibp.amce.model, G)
sibp.amce.model <- get_amce_model(sibp.fit, X, Y, G = G)
# Power analysis
get_power_analysis_linear(sibp.amce.model, G)
rm(list = ls())
setwd('~/Documents/thesis/data/')
load('./rdata/survey_analysis_race.RData')
source("../src/R/survey/survey_analysis_helper.R")
sibp.amce.model <- get_amce_model(sibp.fit, X, Y, G = G)
# Power analysis
get_power_analysis_linear(sibp.amce.model, G)
g3 <- as.data.frame(G)
nrow(G)
colsums(g3)
colSums(g3)
rm(list = ls())
setwd("~/Documents/thesis/data/")
# Load CSV
raw <- read.csv('./csv/FacebookAds.csv')
raw2 <- read.csv('./csv/fb_gold.csv')
nrow(raw)
nrow(raw2)
rm(list = ls())
setwd("~/Documents/thesis/data/")
# Load CSV
raw <- read.csv('./csv/FacebookAds.csv')
# Facebook events
# Count: 225
# Spend: 448203.1
# Clicks: 86375
# Impressions: 1363048
count(subset(raw, grepl("/events/", LandingPage) | grepl("/events/", AdText)))
sum(subset(raw, (grepl("/events/", LandingPage) | grepl("/events/", AdText)) & !is.na(AdSpend) & AdSpendCurrency == 'RUB')$AdSpend)
sum(subset(raw, (grepl("/events/", LandingPage) | grepl("/events/", AdText)) & !is.na(Clicks))$Clicks)
sum(subset(raw, (grepl("/events/", LandingPage) | grepl("/events/", AdText)) & !is.na(Impressions))$Impressions)
# Get number of IRA-domain urls
# Count: 265
# Spend: 178531
# Clicks: 90416
# Impressions: 1396878
count(subset(raw, grepl("blackmattersus", LandingPage) |
grepl("dudeers.com", LandingPage) |
grepl("black4black.com", LandingPage) |
grepl("donotshoot.us", LandingPage)))
# Get number of IRA-domain urls
# Count: 265
# Spend: 178531
# Clicks: 90416
# Impressions: 1396878
count(subset(
raw,
grepl("blackmatters", LandingPage) |
grepl("dudeers", LandingPage) |
grepl("black4black", LandingPage) |
grepl("donotshoot", LandingPage) |
grepl("hilltendo", LandingPage) |
grepl("musicfb", LandingPage)
))
sum(subset(
raw,
(
grepl("blackmattersus", LandingPage) |
grepl("dudeers", LandingPage) |
grepl("black4black", LandingPage) |
grepl("donotshoot", LandingPage) |
grepl("hilltendo", LandingPage) |
grepl("musicfb", LandingPage)
) & !is.na(AdSpend) & AdSpendCurrency == 'RUB'
)$AdSpend)
sum(subset(raw, (
grepl("blackmattersus", LandingPage) |
grepl("dudeers", LandingPage) |
grepl("black4black", LandingPage) |
grepl("donotshoot", LandingPage) |
grepl("hilltendo", LandingPage) |
grepl("musicfb", LandingPage)
) & !is.na(Clicks))$Clicks)
sum(subset(raw, (
grepl("blackmattersus", LandingPage) |
grepl("dudeers", LandingPage) |
grepl("black4black", LandingPage) |
grepl("donotshoot", LandingPage) |
grepl("hilltendo", LandingPage) |
grepl("musicfb", LandingPage)
) & !is.na(Impressions))$Impressions)
# Non missing pages (totals)
# Count: 3488
# Spend: 4893046
# Clicks: 3729406
# Impressions: 40326539
count(subset(raw, LandingPage != ""))
sum(subset(raw, LandingPage != "" &
!is.na(AdSpend) & AdSpendCurrency == 'RUB')$AdSpend)
sum(subset(raw, LandingPage != "" & !is.na(Clicks))$Clicks)
sum(subset(raw, LandingPage != "" &
!is.na(Impressions))$Impressions)
# Facebook events
# Count: 225
# Spend: 448203.1
# Clicks: 86375
# Impressions: 1363048
count(subset(raw, grepl("/events/", LandingPage) |
grepl("/events/", AdText)))
sum(subset(raw, (
grepl("/events/", LandingPage) |
grepl("/events/", AdText)
) & !is.na(AdSpend) & AdSpendCurrency == 'RUB')$AdSpend)
sum(subset(raw, (
grepl("/events/", LandingPage) |
grepl("/events/", AdText)
) & !is.na(Clicks))$Clicks)
sum(subset(raw, (
grepl("/events/", LandingPage) |
grepl("/events/", AdText)
) & !is.na(Impressions))$Impressions)
# Facebook general
# Calculates: 2950 - 225 = 2725
# Spend: 4419043 - 448203 = 3970840
# Clicks: 3612877 - 86375 = 3526502
# Impressions: 36754957 - 1363048 = 35391909
count(subset(raw, grepl("facebook.com", LandingPage)))
sum(subset(raw, (grepl(
"facebook.com", LandingPage
)) & !is.na(AdSpend) & AdSpendCurrency == 'RUB')$AdSpend)
sum(subset(raw, (grepl(
"facebook.com", LandingPage
)) & !is.na(Clicks))$Clicks)
sum(subset(raw, (grepl(
"facebook.com", LandingPage
)) & !is.na(Impressions))$Impressions)
# Facebook general
# Calculates: 2950 - 225 = 2725
# Spend: 4419043 - 448203 = 3970840
# Clicks: 3612877 - 86375 = 3526502
# Impressions: 36754957 - 1363048 = 35391909
count(subset(raw, grepl("facebook", LandingPage)))
sum(subset(raw, (grepl(
"facebook", LandingPage
)) & !is.na(AdSpend) & AdSpendCurrency == 'RUB')$AdSpend)
sum(subset(raw, (grepl(
"facebook", LandingPage
)) & !is.na(Clicks))$Clicks)
sum(subset(raw, (grepl(
"facebook", LandingPage
)) & !is.na(Impressions))$Impressions)
# Instagram pages
# Count: 120
# Spend: 236952
# Clicks: 11378
# Impressions: 1991071
count(subset(raw, grepl("instagram", LandingPage)))
# Facebook events
# Count: 225
# Spend: 448203.1
# Clicks: 86375
# Impressions: 1363048
count(subset(raw, grepl("/events/", LandingPage) |
grepl("/events/", AdText)))
sum(subset(raw, (
grepl("/events/", LandingPage) |
grepl("/events/", AdText)
) & !is.na(AdSpend) & AdSpendCurrency == 'RUB')$AdSpend)
sum(subset(raw, (
grepl("/events/", LandingPage) |
grepl("/events/", AdText)
) & !is.na(Clicks))$Clicks)
sum(subset(raw, (
grepl("/events/", LandingPage) |
grepl("/events/", AdText)
) & !is.na(Impressions))$Impressions)
# Facebook general
# Calculates: 2950 - 225 = 2725
# Spend: 4419043 - 448203 = 3970840
# Clicks: 3612877 - 86375 = 3526502
# Impressions: 36754957 - 1363048 = 35391909
count(subset(raw, grepl("facebook", LandingPage)))
sum(subset(raw, (grepl(
"facebook", LandingPage
)) & !is.na(AdSpend) & AdSpendCurrency == 'RUB')$AdSpend)
sum(subset(raw, (grepl(
"facebook", LandingPage
)) & !is.na(Clicks))$Clicks)
sum(subset(raw, (grepl(
"facebook", LandingPage
)) & !is.na(Impressions))$Impressions)
# Get number of IRA-domain urls
# Count: 265
# Spend: 178531
# Clicks: 90416
# Impressions: 1396878
count(subset(
raw,
grepl("blackmatters", LandingPage) |
grepl("dudeers", LandingPage) |
grepl("black4black", LandingPage) |
grepl("donotshoot", LandingPage) |
grepl("hilltendo", LandingPage) |
grepl("musicfb", LandingPage)
))
sum(subset(
raw,
(
grepl("blackmattersus", LandingPage) |
grepl("dudeers", LandingPage) |
grepl("black4black", LandingPage) |
grepl("donotshoot", LandingPage) |
grepl("hilltendo", LandingPage) |
grepl("musicfb", LandingPage)
) & !is.na(AdSpend) & AdSpendCurrency == 'RUB'
)$AdSpend)
sum(subset(raw, (
grepl("blackmattersus", LandingPage) |
grepl("dudeers", LandingPage) |
grepl("black4black", LandingPage) |
grepl("donotshoot", LandingPage) |
grepl("hilltendo", LandingPage) |
grepl("musicfb", LandingPage)
) & !is.na(Clicks))$Clicks)
sum(subset(raw, (
grepl("blackmattersus", LandingPage) |
grepl("dudeers", LandingPage) |
grepl("black4black", LandingPage) |
grepl("donotshoot", LandingPage) |
grepl("hilltendo", LandingPage) |
grepl("musicfb", LandingPage)
) & !is.na(Impressions))$Impressions)
2951 - 225
4420211 - 448203
3613270 - 86375
36767610 - 1363048
# Instagram pages
# Count: 120
# Spend: 236952
# Clicks: 11378
# Impressions: 1991071
count(subset(raw, grepl("instagram", LandingPage)))
sum(subset(raw, (grepl(
"instagram", LandingPage
)) & !is.na(AdSpend) & AdSpendCurrency == 'RUB')$AdSpend)
sum(subset(raw, (grepl(
"instagram", LandingPage
)) & !is.na(Clicks))$Clicks)
sum(subset(raw, (grepl(
"instagram", LandingPage
)) & !is.na(Impressions))$Impressions)
# Non missing pages (totals)
# Count: 3488
# Spend: 4893046
# Clicks: 3729406
# Impressions: 40326539
count(subset(raw, LandingPage != ""))
sum(subset(raw, LandingPage != "" &
!is.na(AdSpend) & AdSpendCurrency == 'RUB')$AdSpend)
sum(subset(raw, LandingPage != "" & !is.na(Clicks))$Clicks)
sum(subset(raw, LandingPage != "" &
!is.na(Impressions))$Impressions)
# Get number of IRA-domain urls
# Count: 675
# Spend: 601883.6
# Clicks: 456585
# Impressions: 4893669
count(subset(
raw,
grepl("blackmatters.us", LandingPage) |
grepl("dudeers", LandingPage) |
grepl("black4black", LandingPage) |
grepl("donotshoot", LandingPage) |
grepl("hilltendo", LandingPage) |
grepl("musicfb", LandingPage)
))
# Get number of IRA-domain urls
# Count: 675
# Spend: 601883.6
# Clicks: 456585
# Impressions: 4893669
count(subset(
raw,
grepl("blackmatters.us", LandingPage) |
grepl("dudeers.com", LandingPage) |
grepl("black4black.info", LandingPage) |
grepl("donotshoot.us", LandingPage) |
grepl("hilltendo.com", LandingPage) |
grepl("musicfb.info", LandingPage)
))
sum(subset(
raw,
(
grepl("blackmatters.us", LandingPage) |
grepl("dudeers.com", LandingPage) |
grepl("black4black.info", LandingPage) |
grepl("donotshoot.us", LandingPage) |
grepl("hilltendo.com", LandingPage) |
grepl("musicfb.info", LandingPage)
) & !is.na(AdSpend) & AdSpendCurrency == 'RUB'
)$AdSpend)
sum(subset(raw, (
grepl("blackmatters.us", LandingPage) |
grepl("dudeers.com", LandingPage) |
grepl("black4black.info", LandingPage) |
grepl("donotshoot.us", LandingPage) |
grepl("hilltendo.com", LandingPage) |
grepl("musicfb.info", LandingPage)
) & !is.na(Clicks))$Clicks)
sum(subset(raw, (
grepl("blackmatters.us", LandingPage) |
grepl("dudeers.com", LandingPage) |
grepl("black4black.info", LandingPage) |
grepl("donotshoot.us", LandingPage) |
grepl("hilltendo.com", LandingPage) |
grepl("musicfb.info", LandingPage)
) & !is.na(Impressions))$Impressions)
3488 - 2725 - 225 - 120 - 125
4893046 - 3970840 - 448203 - 236952 - 32488
3729406 - 3526502 - 86375 - 11378 - 3006
40326539 - 35391909 - 1363048 - 1991071 - 166478
