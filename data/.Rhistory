yaxt = "n",
bty='l',
method = "continuous",
moderator = "AccountGroupCluster",
labeltype = "custom",
custom.labels = c('Police Brutality', 'Bearing Arms', 'Black Empowerment'),
moderator.value = 'cluster_1')
axis(1, at=c(20150000,20155000,20160000,20165000,20170000),
labels = c('01/15','06/15','01/16','06/16','01/17'),
tck = -0.00)
axis(2, at=c(-0.5,0.0,0.2,0.4,0.6,0.8),
tck = -0.00)
dev.off()
?stm::plot.STM
plot(prep_cluster,
topics = c(17,21,46),
covariate = "CreationDateInteger",
model = stm,
xaxt = "n",
yaxt = "n",
bty='l',
col = c('red','red','red'),
method = "continuous",
moderator = "AccountGroupCluster",
labeltype = "custom",
custom.labels = c('Police Brutality', 'Bearing Arms', 'Black Empowerment'),
moderator.value = 'cluster_1')
plot(prep_cluster,
topics = c(17,21,46),
covariate = "CreationDateInteger",
model = stm,
xaxt = "n",
yaxt = "n",
bty='l',
col = c('red'),
method = "continuous",
moderator = "AccountGroupCluster",
labeltype = "custom",
custom.labels = c('Police Brutality', 'Bearing Arms', 'Black Empowerment'),
moderator.value = 'cluster_1')
plot(prep_cluster,
topics = c(17),
covariate = "CreationDateInteger",
model = stm,
xaxt = "n",
yaxt = "n",
bty='l',
col = c('red'),
method = "continuous",
moderator = "AccountGroupCluster",
labeltype = "custom",
custom.labels = c('Police Brutality'),
moderator.value = 'cluster_1')
pdf('~/Documents/thesis/data/figures/timeseries_bearing_arms.pdf',width=10,height=5)
plot(prep_cluster,
topics = c(17,21,46),
covariate = "CreationDateInteger",
model = stm,
xaxt = "n",
yaxt = "n",
bty='l',
col = c('red'),
method = "continuous",
moderator = "AccountGroupCluster",
labeltype = "custom",
custom.labels = c('Police Brutality', 'Bearing Arms', 'Black Empowerment'),
moderator.value = 'cluster_1')
pdf('~/Documents/thesis/data/figures/timeseries_bearing_arms.pdf',width=10,height=5)
plot(prep_cluster,
topics = c(17,21,46),
covariate = "CreationDateInteger",
model = stm,
xaxt = "n",
yaxt = "n",
bty='l',
method = "continuous",
moderator = "AccountGroupCluster",
labeltype = "custom",
custom.labels = c('Police Brutality', 'Bearing Arms', 'Black Empowerment'),
moderator.value = 'cluster_1')
axis(1, at=c(20150000,20155000,20160000,20165000,20170000),
labels = c('01/15','06/15','01/16','06/16','01/17'),
tck = -0.00)
axis(2, at=c(-0.5,0.0,0.2,0.4,0.6,0.8),
tck = -0.00)
dev.off()
pdf('~/Documents/thesis/data/figures/timeseries_bearing_arms.pdf',width=10,height=5)
plot(prep_cluster,
topics = c(17,21,46),
covariate = "CreationDateInteger",
model = stm,
xaxt = "n",
yaxt = "n",
bty='l',
text.cex = 1.25,
method = "continuous",
moderator = "AccountGroupCluster",
labeltype = "custom",
custom.labels = c('Police Brutality', 'Bearing Arms', 'Black Empowerment'),
moderator.value = 'cluster_1')
axis(1, at=c(20150000,20155000,20160000,20165000,20170000),
labels = c('01/15','06/15','01/16','06/16','01/17'),
tck = -0.00)
axis(2, at=c(-0.5,0.0,0.2,0.4,0.6,0.8),
tck = -0.00)
dev.off()
pdf('~/Documents/thesis/data/figures/timeseries_bearing_arms.pdf',width=10,height=5)
plot(prep_cluster,
topics = c(17,21,46),
covariate = "CreationDateInteger",
model = stm,
xaxt = "n",
yaxt = "n",
bty='l',
cex.lab = 1.25,
method = "continuous",
moderator = "AccountGroupCluster",
labeltype = "custom",
custom.labels = c('Police Brutality', 'Bearing Arms', 'Black Empowerment'),
moderator.value = 'cluster_1')
axis(1, at=c(20150000,20155000,20160000,20165000,20170000),
labels = c('01/15','06/15','01/16','06/16','01/17'),
tck = -0.00)
axis(2, at=c(-0.5,0.0,0.2,0.4,0.6,0.8),
tck = -0.00)
dev.off()
pdf('~/Documents/thesis/data/figures/timeseries_bearing_arms.pdf',width=10,height=5)
plot(prep_cluster,
topics = c(17,21,46),
covariate = "CreationDateInteger",
model = stm,
xaxt = "n",
yaxt = "n",
bty='l',
text.cex = 1.25,
method = "continuous",
moderator = "AccountGroupCluster",
labeltype = "custom",
custom.labels = c('Police Brutality', 'Bearing Arms', 'Black Empowerment'),
moderator.value = 'cluster_1')
axis(1, at=c(20150000,20155000,20160000,20165000,20170000),
labels = c('01/15','06/15','01/16','06/16','01/17'),
tck = -0.00)
axis(2, at=c(-0.5,0.0,0.2,0.4,0.6,0.8),
tck = -0.00)
dev.off()
View(prep_cluster)
prep_cluster[["call"]]
View(stm_cluster)
stm_cluster[["settings"]][["call"]]
plot(stm_cluster,
type = "perspectives",
n = 50,
covarlevels = c('cluster_1', 'cluster_2'),
topics = 37)
plot(readRDS('rds/model_content_interests.RDS'),
type = "perspectives",
n = 50,
covarlevels = c('Right Wing', 'Black America'),
topics = 37)
plot(readRDS('rds/model_content_interests.RDS'),
type = "perspectives",
n = 50,
covarlevels = c('Right Wing', 'Left Wing'),
topics = 37)
stm_content_interests <- readRDS('rds/model_content_interests.RDS')
View(stm_content_interests)
stm_content_interests[["settings"]][["call"]]
plot(readRDS('rds/model_content_interests.RDS'),
type = "perspectives",
n = 100,
covarlevels = c('Left Wing', 'Black America'),
topics = 37)
stm_content_interests <- readRDS('rds/model_content_interests.RDS')
plot(readRDS('rds/model_content_interests.RDS'),
type = "perspectives",
n = 100,
covarlevels = c('Right Wing', 'Black America'),
topics = 37)
plot(readRDS('rds/model_content_interests.RDS'),
type = "perspectives",
n = 100,
covarlevels = c('Government', 'Black America'),
topics = 37)
plot(readRDS('rds/model_content_interests.RDS'),
type = "perspectives",
n = 100,
covarlevels = c('Bearing Arms', 'Black America'),
topics = 37)
plot(readRDS('rds/model_content_interests.RDS'),
type = "perspectives",
n = 100,
covarlevels = c('Pro-Gun', 'Black America'),
topics = 37)
plot(readRDS('rds/model_content_interests.RDS'),
type = "perspectives",
n = 100,
covarlevels = c('Entertainment', 'Black America'),
topics = 37)
plot(readRDS('rds/model_content_interests.RDS'),
type = "perspectives",
n = 100,
covarlevels = c('Black America', 'Black America'),
topics = 37)
plot(readRDS('rds/model_content_interests.RDS'),
type = "perspectives",
n = 100,
covarlevels = c('LGBT', 'Black America'),
topics = 37)
plot(readRDS('rds/model_content_interests.RDS'),
type = "perspectives",
n = 100,
covarlevels = c('Right Wing', 'Left Wing'),
topics = 37)
plot(readRDS('rds/model_content_interests.RDS'),
type = "perspectives",
n = 20,
covarlevels = c('Right Wing', 'Left Wing'),
topics = 37)
plot(readRDS('rds/model_content_interests.RDS'),
type = "perspectives",
n = 20,
covarlevels = c('Black America', 'Left Wing'),
topics = 37)
plot(readRDS('rds/model_cluster_interests.RDS'),
type = "perspectives",
n = 20,
covarlevels = c('cluster_1', 'cluster_2'),
topics = 37)
plot(readRDS('rds/model_content_cluster.RDS'),
type = "perspectives",
n = 20,
covarlevels = c('cluster_1', 'cluster_2'),
topics = 37)
plot(readRDS('rds/model_content_cluster.RDS'),
type = "perspectives",
n = 120,
covarlevels = c('cluster_1', 'cluster_2'),
topics = 37)
plot(readRDS('rds/model_content_interests.RDS'),
type = "perspectives",
n = 30,
covarlevels = c('Black America', 'Left Wing'),
topics = 37)
plot(readRDS('rds/model_content_interests.RDS'),
type = "perspectives",
n = 30,
covarlevels = c('Right Wing', 'Left Wing'),
topics = 37)
plot(readRDS('rds/model_content_interests.RDS'),
type = "perspectives",
n = 30,
covarlevels = c('Right Wing', 'Left Wing'),
topics = 10)
plot(readRDS('rds/model_content_interests.RDS'),
type = "perspectives",
n = 30,
covarlevels = c('Right Wing', 'Islam in America'),
topics = 10)
plot(readRDS('rds/model_content_interests.RDS'),
type = "perspectives",
n = 30,
covarlevels = c('Right Wing', 'Islam'),
topics = 10)
plot(readRDS('rds/model_content_interests.RDS'),
type = "perspectives",
n = 300,
covarlevels = c('Right Wing', 'Islam'),
topics = 10)
plot(readRDS('rds/model_content_cluster.RDS'),
type = "perspectives",
n = 300,
covarlevels = c('cluster_1', 'cluster_2'),
topics = 10)
lol <- plot(readRDS('rds/model_content_cluster.RDS'),
type = "perspectives",
n = 300,
covarlevels = c('cluster_1', 'cluster_2'),
topics = 10)
plot(readRDS('rds/model_content_interests.RDS'),
type = "perspectives",
n = 200,
covarlevels = c('Right Wing', 'Islam'),
topics = 10)
count(subset(full, grepl(LandingPage, 'events') & (grepl(Interests, 'defense') | grepl(AdText, 'defense'))))
count(subset(full, grepl('events', LandingPage) & (grepl('defense', Interests) | grepl('defense', AdText))))
count(subset(full, AdSpend != low & grepl('events', LandingPage) & (grepl('defense', Interests) | grepl('defense', AdText))))
count(subset(full, AdSpend != 'low' & grepl('events', LandingPage) & (grepl('defense', Interests) | grepl('defense', AdText))))
count(subset(full, AdSpendBin != 'low' & grepl('events', LandingPage) & (grepl('defense', Interests) | grepl('defense', AdText))))
count(subset(full, AdSpendBin == 'high' & grepl('events', LandingPage) & (grepl('defense', Interests) | grepl('defense', AdText))))
count(subset(full, AdSpendBin != 'low' & grepl('events', LandingPage)))))
count(subset(full, AdSpendBin != 'low' & grepl('events', LandingPage))))
count(subset(full, AdSpendBin != 'low' & grepl('events', LandingPage)))
count(subset(full, grepl('events', LandingPage)))
count(subset(full, AdSpendBin == 'low' & grepl('events', LandingPage)))
count(subset(full, AdSpendBin == 'high' & grepl('events', LandingPage) & !grepl('defense', Interests) & !grepl('defense', AdText)))
count(subset(full, grepl('events', LandingPage) & !grepl('defense', Interests) & !grepl('defense', AdText)))
count(subset(full, AdSpendBin == 'low' & grepl('events', LandingPage) & !grepl('defense', Interests) & !grepl('defense', AdText)))
count(subset(full, AdSpendBin == 'high' & grepl('events', LandingPage) & !grepl('defense', Interests) & !grepl('defense', AdText)))
count(subset(full, AdSpendBin == 'low' & grepl('events', LandingPage) & (grepl('defense', Interests) | grepl('defense', AdText))))
subset(full, (primary_topic == 'Election' | grepl('clinton', AdText) | grepl('Clinton', AdText)) & AccountGroupCluster == 'cluster_2')
subset(full, (primary_topic == 'Election' | grepl('clinton', AdText) | grepl('Clinton', AdText)) & AccountGroupCluster == 'cluster_1')$AdText
subset(full, grepl('election', AdText))
count(subset(full, grepl('election', AdText)))
rm(list = ls())
setwd("~/Documents/thesis/data/")
# Load packages
library(stm)
library(tidyverse)
library(formatR)
library(cowplot)
library(qgraph)
# Read data
fb <- read.csv("csv/fb_gold.csv")
# Process data
processed <- textProcessor(documents = fb$AdText, metadata = fb)
out <- prepDocuments(processed$documents, processed$vocab, processed$meta)
# Load full, stm
full <- read.csv("csv/df_interests_spline_age_49.csv")
stm <- readRDS("~/Documents/thesis/data/rds/model_interests_spline_age_49.RDS")
# Set topic names
topicNames <- c(
"Race Tensions", "Black Empowerment", "Black Empowerment",
"Black Empowerment", "Incarceration", "Communal Support",
"Race Tensions", "Race Tensions", "Mixed",
"Islam in America", "Race Tensions", "Black Empowerment",
"Black Empowerment", "Mixed", "Mixed",
"Police Brutality", "Police Brutality", "Race Tensions",
"Police Brutality", "Patriotism", "Bearing Arms",
"Social Justice", "Mixed", "Mixed",
"Music Streaming", "Patriotism", "Black Empowerment",
"Black Empowerment", "Race Tensions", "Mixed",
"Social Justice", "Black Empowerment", "Black Empowerment",
"National Security", "Police Brutality", "Race Tensions",
"Election", "Patriotism", "Black Empowerment",
"Social Justice", "Minorities", "Race Tensions",
"Police Brutality", "Patriotism", "Race Tensions",
"Black Empowerment", "Black Empowerment", "Minorities",
"Black Empowerment"
)
edges <- read.csv("csv/group_to_group_topic.csv")
nodes <- read.csv("csv/group_node_topic.csv")
edges_spread <- edges %>%
spread(group2, weight)
edges_spread[is.na(edges_spread)] <- 0
cormatrix <- cor_auto(edges_spread)
View(cormatrix)
cormatrix <- cor_auto(edges_spread,forcePD=FALSE)
group_sizes <- full %>%
select("AccountGroup") %>%
group_by(AccountGroup) %>%
summarise(rank = n()) %>%
ungroup() %>%
filter(AccountGroup %in% colnames(cormatrix)) %>%
rowwise() %>%
mutate(rank = max((log2(rank) / 1.5), 2))
nums <- c(
"1", "2", "3", "4", "5", "6", "7", "8", "9", "10",
"11", "12", "13", "14", "15", "16", "17", "18", "19", "20",
"21", "22", "23", "24", "25", "26", "27", "28", "29", "30",
"31", "32", "33", "34", "35", "36", "37", "38", "39", "40",
"41", "42", "43", "44", "45", "46", "47", "48", "49", "50",
"51", "52", "53", "54", "55", "56", "57", "58", "59", "60",
"61", "62", "63", "64", "64", "66"
)
qgraph(cormatrix,
layout = "spring",
graph = "glasso",
sampleSize = nrow(cormatrix),
theme = "Borkulo",
nodeNames = colnames(cormatrix),
labels = nums,
vsize = group_sizes$rank,
# filetype = "pdf",
# filename = "~/Documents/coolplot-topic",
cut = .25,
minimum = 0.1,
width = 17.5,
border.width = 1.5,
label.cex = 1.25,
height = 17.5,
legend = TRUE,
legend.mode = "names",
normalize = TRUE,
threshold = TRUE,
# XKCD = TRUE, # the most important argument
theme = "Borkulo")
?qgraph
# Matrix heatmap
cormatrix_original_labels <- colnames(cormatrix)
cormatrix_new_labels <- sprintf("%s", seq(1:60))
colnames(cormatrix) <- cormatrix_new_labels
rownames(cormatrix) <- cormatrix_new_labels
cormatrix_new_labels <- sprintf("%s", seq(1:66))
colnames(cormatrix) <- cormatrix_new_labels
rownames(cormatrix) <- cormatrix_new_labels
edges <- read.csv("csv/group_to_group.csv")
nodes <- read.csv("csv/group_node.csv")
edges_spread <- edges %>%
spread(group2, weight)
edges_spread[is.na(edges_spread)] <- 0
cormatrix <- cor_auto(edges_spread)
# Matrix heatmap
cormatrix_original_labels <- colnames(cormatrix)
cormatrix_new_labels <- sprintf("%s", seq(1:60))
colnames(cormatrix) <- cormatrix_new_labels
rownames(cormatrix) <- cormatrix_new_labels
Heatmap(
cormatrix,
clustering_distance_rows = function(x) as.dist(1 - cor(t(x))),
clustering_distance_columns = function(x) as.dist(1 - cor(t(x))),
clustering_method_columns = "average",
clustering_method_rows = "average",
row_dend_reorder = TRUE,
column_dend_reorder = TRUE,
row_dend_width = unit(2, "in"),
column_dend_height = unit(2, "in"),
# km = 2,
name = " ",
heatmap_legend_param = list(
legend_width = unit(5, "in"),
legend_direction = "horizontal"
)
)
# PLOT _
# Plot topics relative to interests
# (Heatmap)
interestTopicDf <- full %>%
select(c("Interests", "primary_topic")) %>%
filter(Interests != "mixed" & Interests != "unavailable" & primary_topic != "Mixed")
interestTopicMatrix <- t(as.matrix(table(droplevels(interestTopicDf))))
d <- ifelse(log(interestTopicMatrix) < 0, 0, log(interestTopicMatrix))
dd.row <- as.dendrogram(hclust(dist(d)))
row.ord <- order.dendrogram(dd.row)
dd.col <- as.dendrogram(hclust(dist(t(d))))
col.ord <- order.dendrogram(dd.col)
View(d)
interestTopicMatrix <- cor_auto(t(as.matrix(table(droplevels(interestTopicDf)))))
rm(list = ls())
setwd("~/Documents/thesis/data/")
# Load packages
library(stm)
library(furrr)
# Settings
plan(multiprocess)
# Read data
df <- read.csv('csv/fb_gold.csv')
# Process data
processed <- textProcessor(documents = df$AdText, metadata = df)
out <- prepDocuments(processed$documents, processed$vocab, processed$meta)
# stmobj <- stm(out$documents,
#               out$vocab,
#               K = 49,
#               prevalence =~ Interests + s(AgeAverage),
#               data = out$meta,
#               init.type = "Spectral")
# saveRDS(stmobj, "~/Documents/thesis/data/rds/model_interests_spline_age_49.RDS")
stmobj <- readRDS("~/Documents/thesis/data/rds/model_interests_spline_age_49.RDS")
theta <- stmobj$theta
thetadf <- as.data.frame(theta)
# Name thetadf columns, topic-wise
topicNames <- c("Race Tensions","Black Empowerment","Black Empowerment","Black Empowerment","Incarceration","Communal Support","Race Tensions","Race Tensions","Mixed","Islam in America","Race Tensions","Black Empowerment","Black Empowerment","Mixed","Mixed","Police Brutality","Police Brutality","Race Tensions","Police Brutality","Patriotism","Bearing Arms","Social Justice","Mixed","Mixed","Music Streaming","Patriotism","Black Empowerment","Black Empowerment","Race Tensions","Mixed","Social Justice","Black Empowerment","Black Empowerment","National Security","Police Brutality","Race Tensions","Election","Patriotism","Black Empowerment","Social Justice","Minorities","Race Tensions","Police Brutality","Mixed","Race Tensions","Black Empowerment","Black Empowerment","Minorities","Black Empowerment")
names(thetadf) <- topicNames
# Attach AdID field to topics
AdID <- out$meta[,"AdID"]
topics <- as.data.frame(cbind(thetadf,AdID))
# Get primary topic for each ad
topics$"primary_topic" <- colnames(topics[,c(1:ncol(stmobj$theta))])[max.col(topics[,c(1:ncol(stmobj$theta))],ties.method="first")]
# Clean primary topic labels
topics$"primary_topic" <- gsub('[[:digit:]]+', '', topics$"primary_topic")
topics$"primary_topic" <- gsub('[.]', '', topics$"primary_topic")
# Drop topic loadings
topics <- topics[,c('AdID','primary_topic')]
# Create df with full ad data + topic loadings
full <- left_join(df, topics,  by=c("AdID" = "AdID"))
View(full)
rm(list = ls())
setwd("~/Documents/thesis/data/")
# Load packages
library(stm)
library(furrr)
# Settings
plan(multiprocess)
# Read data
df <- read.csv('csv/fb_gold.csv')
# Process data
processed <- textProcessor(documents = df$AdText, metadata = df)
out <- prepDocuments(processed$documents, processed$vocab, processed$meta)
# Interests content
modelContentInterests <- readRDS('~/Documents/thesis/data/rds/model_content_interests.RDS')
# Time and interests interaction
# stmContentCluster <- stm(out$documents, out$vocab, K = 49,
#                             prevalence =~ AccountGroupCluster,
#                             content =~ AccountGroupCluster,
#                             interactions = FALSE,
#                             data = out$meta, init.type = "Spectral")
stmContentCluster <- readRDS('rds/model_content_cluster.RDS')
plot(stmContentCluster,
type = "perspectives",
n = 30,
covarlevels = c('cluster_1', 'cluster_2'),
topics = 24)
plot(stmContentCluster,
type = "perspectives",
n = 30,
covarlevels = c('cluster_1', 'cluster_2'),
topics = 34)
plot(stmContentCluster,
type = "perspectives",
n = 100,
covarlevels = c('cluster_1', 'cluster_2'),
topics = 34)
