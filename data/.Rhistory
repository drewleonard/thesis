clusterPrepPlotDf$X2.5.,
clusterPrepPlotDf$X97.5.
)
colnames(clusterPrepDf) <-
c("primary_topic", "topic_n", "mean", "lower", "upper")
clusterPrepDf <- clusterPrepDf %>%
group_by(primary_topic) %>%
summarise(
avg_ci_point_estimate = mean(mean),
avg_ci_lower_bound = mean(lower),
avg_ci_upper_bound = mean(upper)
)
table_text <- cbind(
c(NA, seq(1, length(
clusterPrepDf$primary_topic
))),
c("Primary Topic", as.vector(clusterPrepDf$primary_topic)),
c(
"Confidence Interval (95%)",
formatInterval(
clusterPrepDf$avg_ci_point_estimate,
clusterPrepDf$avg_ci_lower_bound,
clusterPrepDf$avg_ci_upper_bound
)
)
)
rm(list = ls())
setwd("~/Documents/thesis/data/")
# Load packages
library(ComplexHeatmap)
library(RColorBrewer)
library(cowplot)
library(dendsort)
library(dendsort)
library(extrafont)
library(forestplot)
library(formatR)
library(ggrepel)
library(ggridges)
library(lattice)
library(gplots)
library(latticeExtra)
library(lubridate)
library(qgraph)
library(reshape2)
library(scales)
library(stm)
library(styler)
library(tidyverse)
library(viridis)
# Read data
fb <- read.csv("csv/fb_gold.csv")
# Process data
processed <- textProcessor(documents = fb$AdText, metadata = fb)
out <-
prepDocuments(processed$documents, processed$vocab, processed$meta)
# Load full, stm
full <- read.csv("csv/df_interests_spline_age_49.csv")
stm <-
readRDS("~/Documents/thesis/data/rds/model_interests_spline_age_49.RDS")
# Load fonts
extrafont::loadfonts()
# Set topic names
topicNames <- c(
"Race Tensions",
"Black Empowerment",
"Black Empowerment",
"Black Empowerment",
"Incarceration",
"Communal Support",
"Race Tensions",
"Race Tensions",
"Mixed",
"Islam in America",
"Race Tensions",
"Black Empowerment",
"Black Empowerment",
"Mixed",
"Mixed",
"Police Brutality",
"Police Brutality",
"Race Tensions",
"Police Brutality",
"Patriotism",
"Bearing Arms",
"Social Justice",
"Mixed",
"Mixed",
"Music Streaming",
"Patriotism",
"Black Empowerment",
"Black Empowerment",
"Race Tensions",
"Mixed",
"Social Justice",
"Black Empowerment",
"Black Empowerment",
"National Security",
"Police Brutality",
"Race Tensions",
"Election",
"Patriotism",
"Black Empowerment",
"Social Justice",
"Minorities",
"Race Tensions",
"Police Brutality",
"Patriotism",
"Race Tensions",
"Black Empowerment",
"Black Empowerment",
"Minorities",
"Black Empowerment"
)
source('../src/R/analysis/analysis_helper.R')
# Set topic names
topicNames <- c(
"Race Tensions",
"Black Empowerment",
"Black Empowerment",
"Black Empowerment",
"Incarceration",
"Communal Support",
"Race Tensions",
"Race Tensions",
"Mixed",
"Islam in America",
"Race Tensions",
"Black Empowerment",
"Black Empowerment",
"Mixed",
"Mixed",
"Police Brutality",
"Police Brutality",
"Race Tensions",
"Police Brutality",
"Patriotism",
"Bearing Arms",
"Social Justice",
"Mixed",
"Mixed",
"Music Streaming",
"Patriotism",
"Black Empowerment",
"Black Empowerment",
"Race Tensions",
"Mixed",
"Social Justice",
"Black Empowerment",
"Black Empowerment",
"National Security",
"Police Brutality",
"Race Tensions",
"Election",
"Patriotism",
"Black Empowerment",
"Social Justice",
"Minorities",
"Race Tensions",
"Police Brutality",
"Patriotism",
"Race Tensions",
"Black Empowerment",
"Black Empowerment",
"Minorities",
"Black Empowerment"
)
# Cluster topic prevalence analysis
clusterPrep <- estimateEffect(
formula = c(1:49) ~ AccountGroupCluster,
stmobj = stm,
metadata = out$meta,
uncertainty = "Global"
)
clusterPrepPlot <- plot(
clusterPrep,
covariate = "AccountGroupCluster",
topics = c(1:49),
model = stm,
method = "difference",
cov.value1 = "cluster_2",
cov.value2 = "cluster_1",
xlab = "Cluster one ... Cluster two",
main = "",
labeltype = "custom",
xlim = c(-.3, .3),
custom.labels = topicNames
)
clusterPrepPlotDf <-
data.frame(t(sapply(clusterPrepPlot$cis, function(x)
x[1:max(lengths(clusterPrepPlot$cis))])))
clusterPrepDf <- data.frame(
clusterPrepPlot$labels,
clusterPrepPlot$topics,
unlist(clusterPrepPlot$means),
clusterPrepPlotDf$X2.5.,
clusterPrepPlotDf$X97.5.
)
colnames(clusterPrepDf) <-
c("primary_topic", "topic_n", "mean", "lower", "upper")
clusterPrepDf <- clusterPrepDf %>%
group_by(primary_topic) %>%
summarise(
avg_ci_point_estimate = mean(mean),
avg_ci_lower_bound = mean(lower),
avg_ci_upper_bound = mean(upper)
)
table_text <- cbind(
c(NA, seq(1, length(
clusterPrepDf$primary_topic
))),
c("Primary Topic", as.vector(clusterPrepDf$primary_topic)),
c(
"Confidence Interval (95%)",
formatInterval(
clusterPrepDf$avg_ci_point_estimate,
clusterPrepDf$avg_ci_lower_bound,
clusterPrepDf$avg_ci_upper_bound
)
)
)
pdf("~/Documents/thesis/data/figures/analysis/network_interest_effect.pdf")
forestplot(
table_text,
graph.pos = 3,
is.summary = c(TRUE, rep(
FALSE, length(clusterPrepDf$primary_topic)
)),
align = c("r", "l", "r"),
mean = c(NA, clusterPrepDf$avg_ci_point_estimate),
lower = c(NA, clusterPrepDf$avg_ci_lower_bound),
upper = c(NA, clusterPrepDf$avg_ci_upper_bound),
fn.ci_norm = fpDrawCircleCI,
hrzl_lines = list("2" = gpar(lwd = 2, col = "#000000")),
boxsize = .15,
xlab = ("\nCluster One ... Cluster Two"),
cex = 0,
zero = 0,
new_page = FALSE,
txt_gp = fpTxtGp(
xlab = gpar(cex = .75),
label = gpar(cex = .75),
ticks = gpar(cex = .75)
),
col = fpColors(box = "black", lines = "black", zero = "gray50"),
cex = 0.9,
lineheight = "auto",
colgap = unit(4, "mm"),
lwd.ci = 1,
clip = c(-.1, 1)
)
dev.off()
rm(list = ls())
setwd("~/Documents/thesis/data/")
# Load packages
library(ComplexHeatmap)
library(RColorBrewer)
library(cowplot)
library(dendsort)
library(dendsort)
library(extrafont)
library(forestplot)
library(formatR)
library(ggrepel)
library(ggridges)
library(gplots)
library(lattice)
library(latticeExtra)
library(lubridate)
library(qgraph)
library(reshape2)
library(scales)
library(stm)
library(styler)
library(tidyverse)
library(viridis)
# Read data
fb <- read.csv("csv/fb_gold.csv")
# Process data
processed <- textProcessor(documents = fb$AdText, metadata = fb)
out <-
prepDocuments(processed$documents, processed$vocab, processed$meta)
# Load full, stm
full <- read.csv("csv/df_interests_spline_age_49.csv")
stm <-
readRDS("~/Documents/thesis/data/rds/model_interests_spline_age_49.RDS")
# Load fonts
extrafont::loadfonts()
# PLOT _
# Basic summary graphs
metric_df <- full %>%
select(Impressions, Clicks, AdSpend) %>%
filter(Impressions < quantile(Impressions, 0.98) &
Impressions > 0) %>%
filter(Clicks < quantile(Clicks, 0.98) & Clicks > 0) %>%
filter(AdSpend < quantile(AdSpend, 0.98) & AdSpend > 0)
impressions_p <- metric_df %>%
ggplot() +
geom_histogram(
aes(Impressions, y = ..count.. / sum(..count..)),
binwidth = quantile(full$Impressions, 0.95) * 0.05,
colour = "white",
size = 1,
boundary = 0
) +
xlim(0, quantile(full$Impressions, 0.95)) +
ylim(0, .55) +
ylab("") +
xlab("Impressions")
impressions_p_sub <- full %>%
filter(Impressions < quantile(Impressions, 0.99)) %>%
ggplot() +
geom_density(aes(Impressions, ..count.. / sum(..count..))) +
ylab("") +
xlab("")
ggdraw() +
draw_plot(impressions_p + theme(legend.justification = "bottom"), 0, 0, 1, 1) +
draw_plot(impressions_p_sub +
theme(legend.justification = "top"),
0.5,
0.5,
0.5,
0.5)
full %>%
ggplot() +
geom_histogram(aes(AdSpend,y = ..count../sum(..count..)),
binwidth = 1000,
colour='white',
size=1) +
xlim(0,25000) +
ylim(0,.15) +
ylab('Proportion') +
xlab('Ad Spend (RUB)')
spend_p <- metric_df %>%
ggplot() +
geom_histogram(
aes(AdSpend, y = ..count.. / sum(..count..)),
binwidth = quantile(full$AdSpend, 0.95) * 0.05,
colour = "white",
size = 1,
boundary = 0
) +
xlim(0, quantile(full$AdSpend, 0.95)) +
ylim(0, 0.55) +
ylab("") +
xlab("Spend (RUB)")
spend_p_sub <- full %>%
filter(AdSpend < quantile(AdSpend, 0.99)) %>%
ggplot() +
geom_density(aes(AdSpend, ..count.. / sum(..count..))) +
ylab("") +
xlab("")
ggdraw() +
draw_plot(spend_p + theme(legend.justification = "bottom"), 0, 0, 1, 1) +
draw_plot(spend_p_sub +
theme(legend.justification = "top"),
0.5,
0.5,
0.5,
0.5)
rm(list = ls())
setwd("~/Documents/thesis/data/")
# Load packages
library(ComplexHeatmap)
library(RColorBrewer)
library(cowplot)
library(dendsort)
library(dendsort)
library(extrafont)
library(forestplot)
library(formatR)
library(ggrepel)
library(ggridges)
library(gplots)
library(lattice)
library(latticeExtra)
library(lubridate)
library(qgraph)
library(reshape2)
library(scales)
library(stm)
library(styler)
library(tidyverse)
library(viridis)
# Read data
fb <- read.csv("csv/fb_gold.csv")
# Process data
processed <- textProcessor(documents = fb$AdText, metadata = fb)
out <-
prepDocuments(processed$documents, processed$vocab, processed$meta)
# Load full, stm
full <- read.csv("csv/df_interests_spline_age_49.csv")
stm <-
readRDS("~/Documents/thesis/data/rds/model_interests_spline_age_49.RDS")
# Plot groups relative to topics
# (Heatmap)
accountGroupTopicDf <- full %>%
select(c("AccountGroup", "primary_topic")) %>%
filter(AccountGroup != "unavailable" & primary_topic != "Mixed")
accountGroupTopicMatrix <-
t(as.matrix(table(droplevels(
accountGroupTopicDf
))))
d2 <-
ifelse(log10(accountGroupTopicMatrix) < 0,
0,
log10(accountGroupTopicMatrix))
dd2.row <- as.dendrogram(hclust(dist(d2)))
row2.ord <- order.dendrogram(dd2.row)
dd2.col <- as.dendrogram(hclust(dist(t(d2))))
col2.ord <- order.dendrogram(dd2.col)
lattice.options(axis.padding = list(factor = 0.5))
levelplot(
d2[row2.ord, col2.ord],
aspect = "fill",
xlab = "Discussed Topics",
ylab = "Account Groups",
pretty = TRUE,
drop.unused.levels = TRUE,
scales = list(x = list(rot = 45), tck = c(0, 0)),
colorkey = list(space = "right"),
par.settings = custom.theme(region = plasma(10)),
border = "black",
border.lwd = .6,
xaxt = "n",
yaxt = "n",
legend = list(
left = list(
fun = dendrogramGrob,
args =
list(
x = dd2.col,
ord = col2.ord,
side = "right",
size = 0
)
),
top = list(
fun = dendrogramGrob,
args =
list(x = dd2.row,
side = "top", size = 0)
)
)
)
# Effects of time on topics
creationDatePrep <- estimateEffect(
formula = c(1:49) ~ s(CreationDateInteger),
stmobj = stm,
metadata = out$meta,
uncertainty = "Global"
)
# Effects of time on topics
creationDatePrep <- estimateEffect(
formula = c(1:49) ~ s(CreationDateInteger),
stmobj = stm,
metadata = out$meta,
uncertainty = "Global"
)
plot(
creationDatePrep,
"CreationDateInteger",
method = "continuous",
topics = (27),
model = stm,
printlegend = TRUE,
xlab = "Time",
xaxt = "n",
labeltype = "custom",
custom.labels = c("Black Empowerment (Topic 27)")
)
plot(
creationDatePrep,
"CreationDateInteger",
method = "continuous",
topics = (27),
model = stm,
printlegend = TRUE,
xlab = "Time",
xaxt = "n",
labeltype = "custom",
custom.labels = c("Black Empowerment (Topic 27)")
)
monthseq <- seq(
from = as.Date("2014-01-01"),
to = as.Date("2019-08-13"),
by = "month"
)
monthnames <- months(monthseq)
axis(1,
at = as.numeric(monthseq) - min(as.numeric(monthseq)),
labels = monthnames)
# PLOT _
# Time series trends
time_df <- full
time_df$Date <- as.Date(time_df$CreationDateFormatted,
"%Y-%m-%d")
time_df$Month <- as.Date(cut(time_df$Date,
breaks = "week"))
time_df <- time_df %>%
select(primary_topic, Month) %>%
group_by(Month, primary_topic) %>%
summarise(n = n()) %>%
group_by(primary_topic) %>%
mutate(freq = n / sum(n)) %>%
filter(!is.na(primary_topic))
time_df %>%
filter(primary_topic == "Election") %>%
ggplot(aes(Month, n)) +
geom_point() +
geom_path() +
geom_vline(aes(xintercept = as.Date("2016-11-08")), colour = "blue")
