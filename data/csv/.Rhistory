gamma_terms <- td_gamma %>%
group_by(topic) %>%
summarise(gamma = mean(gamma)) %>%
arrange(desc(gamma)) %>%
left_join(top_terms, by = "topic") %>%
mutate(topic = paste0("Topic ", topic),
topic = reorder(topic, gamma))
rm(list = ls())
setwd("~/Documents/thesis/data/csv/")
# Libraries
library(stm)
library(furrr)
library(tidyverse)
library(tidytext)
library(ggthemes)
library(scales)
library(knitr)
# Settings
plan(multiprocess)
# Settings
plan(multiprocess)
# Load and pre-process data
fb <- read.csv("./fb_meta_cleaned.csv")
processed <- textProcessor(documents = fb$AdText, metadata = fb)
out <- prepDocuments(processed$documents, processed$vocab, processed$meta)
docs <- out$documents
vocab <- out$vocab
meta <- out$meta
# saveRDS(many_models, file = "~/Documents/thesis/data/rds/stm_models_gold_40_60_4.RDS")
many_models <- readRDS('~/Documents/thesis/data/rds/stm_models_gold_40_60_4.RDS')
heldout <- make.heldout(docs, vocab)
# Make k results object
k_result <- many_models %>%
mutate(exclusivity = map(topic_model, exclusivity),
semantic_coherence = map(topic_model, semanticCoherence, docs),
eval_heldout = map(topic_model, eval.heldout, heldout$missing),
residual = map(topic_model, checkResiduals, docs),
bound =  map_dbl(topic_model, function(x) max(x$convergence$bound)),
lfact = map_dbl(topic_model, function(x) lfactorial(x$settings$dim$K)),
lbound = bound + lfact,
iterations = map_dbl(topic_model, function(x) length(x$convergence$bound)))
# Pull single model
topic_model <- k_result %>%
filter(K == 60) %>%
pull(topic_model) %>%
.[[1]]
td_beta <- tidy(topic_model)
td_gamma <- tidy(topic_model, matrix = "gamma",
document_names = rownames(docs))
top_terms <- td_beta %>%
arrange(beta) %>%
group_by(topic) %>%
top_n(10, beta) %>%
arrange(-beta) %>%
select(topic, term) %>%
summarise(terms = list(term)) %>%
mutate(terms = map(terms, paste, collapse = ", ")) %>%
unnest()
gamma_terms <- td_gamma %>%
group_by(topic) %>%
summarise(gamma = mean(gamma)) %>%
arrange(desc(gamma)) %>%
left_join(top_terms, by = "topic") %>%
mutate(topic = paste0("Topic ", topic),
topic = reorder(topic, gamma))
# Plot top terms topic-wise
gamma_terms %>%
top_n(40, gamma) %>%
ggplot(aes(topic, gamma, label = terms)) +
geom_col(show.legend = FALSE) +
geom_text(hjust = 0, nudge_y = 0.0005, size = 3,
family = "sans") +
coord_flip() +
scale_y_continuous(expand = c(0,0),
limits = c(0, 0.09),
labels = percent_format()) +
theme_tufte(base_family = "sans", ticks = FALSE) +
theme(plot.title = element_text(size = 16,
family="sans"),
plot.subtitle = element_text(size = 13)) +
labs(x = NULL, y = expression(gamma),
title = "Top topics by prevalence in the FB IRA data-set")
saveRDS(topic_model,file="~/Documents/thesis/data/rds/stm_60_gold.RDS")
rm(list=ls())
setwd("~/Documents/thesis/data/")
# Load packages
library(stm)
library(tidyverse)
library(plyr)
library(forestplot)
library(ggridges)
# Load and process cleaned CSV file
fb <- read.csv('csv/fb_meta_cleaned.csv')
processed <- textProcessor(documents = fb$AdText, metadata = fb)
out <- prepDocuments(processed$documents, processed$vocab, processed$meta)
docs <- out$documents
vocab <- out$vocab
meta <- out$meta
# Load stm model
stm <- readRDS("rds/stm_60_gold.RDS")
# Get and cast theta object from STM
theta <- stm$theta
thetadf <- as.data.frame(theta)
# Name thetadf columns, topic-wise
names(thetadf) <- c('T1', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7', 'T8', 'T9', 'T10',
'T11', 'T12', 'T13', 'T14', 'T15', 'T16', 'T17', 'T18', 'T19',
'T20', 'T21', 'T22', 'T23', 'T24', 'T25', 'T26', 'T27', 'T28',
'T29', 'T30', 'T31', 'T32', 'T33', 'T34', 'T35', 'T36', 'T37',
'T38', 'T39', 'T40', 'T41', 'T42', 'T43', 'T44', 'T45', 'T46',
'T47', 'T48', 'T49', 'T50', 'T51', 'T52', 'T53', 'T54', 'T55',
'T56','T57','T58','T59','T60')
topics <- cbind(thetadf, out$meta[,"AdID"])
topics <- as.data.frame(topics)
full <- left_join(fb, topics,  by=c("AdID" = "out$meta[, \"AdID\"]"))
# Column for each ad's primary topic
full$"primary_topic" <- colnames(full[,c(12:71)])[max.col(full[,c(12:71)],ties.method="first")]
full <- full[!is.na(full$primary_topic),]
# Drop unwanted colums
full <- full[,c('AdText','Interests','primary_topic')]
rm(list = ls())
# Libraries
library(stm)
setwd("~/Documents/thesis/data/csv/")
library(furrr)
library(tidyverse)
library(tidytext)
library(ggthemes)
library(scales)
library(knitr)
# Settings
plan(multiprocess)
# Load and pre-process data
fb <- read.csv("./fb_meta_cleaned.csv")
processed <- textProcessor(documents = fb$AdText, metadata = fb)
out <- prepDocuments(processed$documents, processed$vocab, processed$meta)
docs <- out$documents
vocab <- out$vocab
meta <- out$meta
# Format date
fb$"CreationDate" <- as.Date(strptime(fb$CreationDate, "%m/%d/%y %H:%M:%S"))
many_models <- data_frame(K = c(45,47,49,51,53,55)) %>%
mutate(topic_model = future_map(
K, ~stm(docs, vocab, K = ., prevalence =~ Interests, data = meta, init.type = "Spectral")))
saveRDS(many_models, file = "~/Documents/thesis/data/rds/stm_models_gold_45_55_2.RDS")
heldout <- make.heldout(docs, vocab)
# Make k results object
k_result <- many_models %>%
mutate(exclusivity = map(topic_model, exclusivity),
semantic_coherence = map(topic_model, semanticCoherence, docs),
eval_heldout = map(topic_model, eval.heldout, heldout$missing),
residual = map(topic_model, checkResiduals, docs),
bound =  map_dbl(topic_model, function(x) max(x$convergence$bound)),
lfact = map_dbl(topic_model, function(x) lfactorial(x$settings$dim$K)),
lbound = bound + lfact,
iterations = map_dbl(topic_model, function(x) length(x$convergence$bound)))
# Plot k_results 4-pane
k_result %>%
transmute(K,
`Lower bound` = lbound,
Residuals = map_dbl(residual, "dispersion"),
`Semantic coherence` = map_dbl(semantic_coherence, mean),
`Held-out likelihood` = map_dbl(eval_heldout, "expected.heldout")) %>%
gather(Metric, Value, -K) %>%
ggplot(aes(K, Value, color = Metric)) +
geom_line(size = 1.5, alpha = 0.7, show.legend = FALSE) +
facet_wrap(~Metric, scales = "free_y") +
labs(x = "K (number of topics)",
y = NULL,
title = "Model diagnostics by number of topics")
heldout <- make.heldout(docs, vocab)
# Pull single model
topic_model <- k_result %>%
filter(K == 49) %>%
pull(topic_model) %>%
.[[1]]
saveRDS(topic_model,file="~/Documents/thesis/data/rds/stm_49_gold.RDS")
td_beta <- tidy(topic_model)
td_gamma <- tidy(topic_model, matrix = "gamma",
document_names = rownames(docs))
top_terms <- td_beta %>%
arrange(beta) %>%
group_by(topic) %>%
top_n(10, beta) %>%
arrange(-beta) %>%
select(topic, term) %>%
summarise(terms = list(term)) %>%
mutate(terms = map(terms, paste, collapse = ", ")) %>%
unnest()
gamma_terms <- td_gamma %>%
group_by(topic) %>%
summarise(gamma = mean(gamma)) %>%
arrange(desc(gamma)) %>%
left_join(top_terms, by = "topic") %>%
mutate(topic = paste0("Topic ", topic),
topic = reorder(topic, gamma))
# Plot top terms topic-wise
gamma_terms %>%
top_n(40, gamma) %>%
ggplot(aes(topic, gamma, label = terms)) +
geom_col(show.legend = FALSE) +
geom_text(hjust = 0, nudge_y = 0.0005, size = 3,
family = "sans") +
coord_flip() +
scale_y_continuous(expand = c(0,0),
limits = c(0, 0.09),
labels = percent_format()) +
theme_tufte(base_family = "sans", ticks = FALSE) +
theme(plot.title = element_text(size = 16,
family="sans"),
plot.subtitle = element_text(size = 13)) +
labs(x = NULL, y = expression(gamma),
title = "Top topics by prevalence in the FB IRA data-set")
# Pull single model
topic_model <- k_result %>%
filter(K == 53) %>%
pull(topic_model) %>%
.[[1]]
saveRDS(topic_model,file="~/Documents/thesis/data/rds/stm_53_gold.RDS")
td_beta <- tidy(topic_model)
td_gamma <- tidy(topic_model, matrix = "gamma",
document_names = rownames(docs))
top_terms <- td_beta %>%
arrange(beta) %>%
group_by(topic) %>%
top_n(10, beta) %>%
arrange(-beta) %>%
select(topic, term) %>%
summarise(terms = list(term)) %>%
mutate(terms = map(terms, paste, collapse = ", ")) %>%
unnest()
gamma_terms <- td_gamma %>%
group_by(topic) %>%
summarise(gamma = mean(gamma)) %>%
arrange(desc(gamma)) %>%
left_join(top_terms, by = "topic") %>%
mutate(topic = paste0("Topic ", topic),
topic = reorder(topic, gamma))
# Plot top terms topic-wise
gamma_terms %>%
top_n(40, gamma) %>%
ggplot(aes(topic, gamma, label = terms)) +
geom_col(show.legend = FALSE) +
geom_text(hjust = 0, nudge_y = 0.0005, size = 3,
family = "sans") +
coord_flip() +
scale_y_continuous(expand = c(0,0),
limits = c(0, 0.09),
labels = percent_format()) +
theme_tufte(base_family = "sans", ticks = FALSE) +
theme(plot.title = element_text(size = 16,
family="sans"),
plot.subtitle = element_text(size = 13)) +
labs(x = NULL, y = expression(gamma),
title = "Top topics by prevalence in the FB IRA data-set")
# Pull single model
topic_model <- k_result %>%
filter(K == 51) %>%
pull(topic_model) %>%
.[[1]]
saveRDS(topic_model,file="~/Documents/thesis/data/rds/stm_51_gold.RDS")
td_beta <- tidy(topic_model)
td_gamma <- tidy(topic_model, matrix = "gamma",
document_names = rownames(docs))
top_terms <- td_beta %>%
arrange(beta) %>%
group_by(topic) %>%
top_n(10, beta) %>%
arrange(-beta) %>%
select(topic, term) %>%
summarise(terms = list(term)) %>%
mutate(terms = map(terms, paste, collapse = ", ")) %>%
unnest()
gamma_terms <- td_gamma %>%
group_by(topic) %>%
summarise(gamma = mean(gamma)) %>%
arrange(desc(gamma)) %>%
left_join(top_terms, by = "topic") %>%
mutate(topic = paste0("Topic ", topic),
topic = reorder(topic, gamma))
# Plot top terms topic-wise
gamma_terms %>%
top_n(40, gamma) %>%
ggplot(aes(topic, gamma, label = terms)) +
geom_col(show.legend = FALSE) +
geom_text(hjust = 0, nudge_y = 0.0005, size = 3,
family = "sans") +
coord_flip() +
scale_y_continuous(expand = c(0,0),
limits = c(0, 0.09),
labels = percent_format()) +
theme_tufte(base_family = "sans", ticks = FALSE) +
theme(plot.title = element_text(size = 16,
family="sans"),
plot.subtitle = element_text(size = 13)) +
labs(x = NULL, y = expression(gamma),
title = "Top topics by prevalence in the FB IRA data-set")
rm(list=ls())
setwd("~/Documents/thesis/data/")
# Load packages
library(stm)
library(tidyverse)
library(plyr)
library(forestplot)
library(ggridges)
# Load and process cleaned CSV file
fb <- read.csv('csv/fb_meta_cleaned.csv')
processed <- textProcessor(documents = fb$AdText, metadata = fb)
out <- prepDocuments(processed$documents, processed$vocab, processed$meta)
docs <- out$documents
vocab <- out$vocab
meta <- out$meta
# Load stm model
stm <- readRDS("rds/stm_51_gold.RDS")
# Get and cast theta object from STM
theta <- stm$theta
thetadf <- as.data.frame(theta)
# Name thetadf columns, topic-wise
names(thetadf) <- c('T1', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7', 'T8', 'T9', 'T10',
'T11', 'T12', 'T13', 'T14', 'T15', 'T16', 'T17', 'T18', 'T19',
'T20', 'T21', 'T22', 'T23', 'T24', 'T25', 'T26', 'T27', 'T28',
'T29', 'T30', 'T31', 'T32', 'T33', 'T34', 'T35', 'T36', 'T37',
'T38', 'T39', 'T40', 'T41', 'T42', 'T43', 'T44', 'T45', 'T46',
'T47', 'T48', 'T49', 'T50', 'T51')
topics <- cbind(thetadf, out$meta[,"AdID"])
topics <- as.data.frame(topics)
full <- left_join(fb, topics,  by=c("AdID" = "out$meta[, \"AdID\"]"))
# Column for each ad's primary topic
full$"primary_topic" <- colnames(full[,c(12:62)])[max.col(full[,c(12:62)],ties.method="first")]
full <- full[!is.na(full$primary_topic),]
# Drop unwanted colums
full <- full[,c('AdText','Interests','primary_topic')]
View(full)
View(full)
subset(full, primary_topic == 'T33')$AdText
unique(subset(full, primary_topic == 'T33')$AdText)
unique(subset(full, primary_topic == 'T11')$AdText)
unique(subset(full, primary_topic == 'T1')$AdText)
unique(subset(full, primary_topic == 'T13')$AdText)
unique(subset(full, primary_topic == 'T44')$AdText)
unique(subset(full, primary_topic == 'T22')$AdText)
unique(subset(full, primary_topic == 'T23')$AdText)
unique(subset(full, primary_topic == 'T23')$AdText)
unique(subset(full, primary_topic == 'T19')$AdText)
unique(subset(full, primary_topic == '25')$AdText)
unique(subset(full, primary_topic == '25')$AdText
)
unique(subset(full, primary_topic == '25')$AdText)
unique(subset(full, primary_topic == 'T23')$AdText)
unique(subset(full, primary_topic == 'T25')$AdText)
unique(subset(full, primary_topic == 'T21')$AdText)
unique(subset(full, primary_topic == 'T14')$AdText)
unique(subset(full, primary_topic == 'T17')$AdText)
unique(subset(full, primary_topic == 'T38')$AdText)
unique(subset(full, primary_topic == 'T29')$AdText)
unique(subset(full, primary_topic == 'T37')$AdText)
unique(subset(full, primary_topic == 'T41')$AdText)
unique(subset(full, primary_topic == 'T4')$AdText)
unique(subset(full, primary_topic == 'T24')$AdText)
unique(subset(full, primary_topic == 'T7')$AdText)
# Load stm model
stm <- readRDS("rds/stm_55_gold.RDS")
# Get and cast theta object from STM
theta <- stm$theta
thetadf <- as.data.frame(theta)
# Name thetadf columns, topic-wise
names(thetadf) <- c('T1', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7', 'T8', 'T9', 'T10',
'T11', 'T12', 'T13', 'T14', 'T15', 'T16', 'T17', 'T18', 'T19',
'T20', 'T21', 'T22', 'T23', 'T24', 'T25', 'T26', 'T27', 'T28',
'T29', 'T30', 'T31', 'T32', 'T33', 'T34', 'T35', 'T36', 'T37',
'T38', 'T39', 'T40', 'T41', 'T42', 'T43', 'T44', 'T45', 'T46',
'T47', 'T48', 'T49', 'T50', 'T51','T52','T53','T54','T55')
topics <- cbind(thetadf, out$meta[,"AdID"])
topics <- as.data.frame(topics)
full <- left_join(fb, topics,  by=c("AdID" = "out$meta[, \"AdID\"]"))
# Column for each ad's primary topic
full$"primary_topic" <- colnames(full[,c(12:66)])[max.col(full[,c(12:66)],ties.method="first")]
full <- full[!is.na(full$primary_topic),]
# Drop unwanted colums
full <- full[,c('AdText','Interests','primary_topic')]
# Load stm model
stm <- readRDS("rds/stm_53_gold.RDS")
# Get and cast theta object from STM
theta <- stm$theta
thetadf <- as.data.frame(theta)
topics <- cbind(thetadf, out$meta[,"AdID"])
# Name thetadf columns, topic-wise
names(thetadf) <- c('T1', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7', 'T8', 'T9', 'T10',
'T11', 'T12', 'T13', 'T14', 'T15', 'T16', 'T17', 'T18', 'T19',
'T20', 'T21', 'T22', 'T23', 'T24', 'T25', 'T26', 'T27', 'T28',
'T29', 'T30', 'T31', 'T32', 'T33', 'T34', 'T35', 'T36', 'T37',
'T38', 'T39', 'T40', 'T41', 'T42', 'T43', 'T44', 'T45', 'T46',
'T47', 'T48', 'T49', 'T50', 'T51','T52','T53')
topics <- as.data.frame(topics)
full <- left_join(fb, topics,  by=c("AdID" = "out$meta[, \"AdID\"]"))
# Column for each ad's primary topic
full$"primary_topic" <- colnames(full[,c(12:64)])[max.col(full[,c(12:64)],ties.method="first")]
full <- full[!is.na(full$primary_topic),]
# Drop unwanted colums
full <- full[,c('AdText','Interests','primary_topic')]
unique(subset(full, primary_topic == 'T52')$AdText)
unique(subset(full, primary_topic == 'T52')$AdText)
# Load stm model
stm <- readRDS("rds/stm_53_gold.RDS")
# Get and cast theta object from STM
theta <- stm$theta
thetadf <- as.data.frame(theta)
# Name thetadf columns, topic-wise
names(thetadf) <- c('T1', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7', 'T8', 'T9', 'T10',
'T11', 'T12', 'T13', 'T14', 'T15', 'T16', 'T17', 'T18', 'T19',
'T20', 'T21', 'T22', 'T23', 'T24', 'T25', 'T26', 'T27', 'T28',
'T29', 'T30', 'T31', 'T32', 'T33', 'T34', 'T35', 'T36', 'T37',
'T38', 'T39', 'T40', 'T41', 'T42', 'T43', 'T44', 'T45', 'T46',
'T47', 'T48', 'T49', 'T50', 'T51','T52','T53')
topics <- cbind(thetadf, out$meta[,"AdID"])
topics <- as.data.frame(topics)
full <- left_join(fb, topics,  by=c("AdID" = "out$meta[, \"AdID\"]"))
# Column for each ad's primary topic
full$"primary_topic" <- colnames(full[,c(12:64)])[max.col(full[,c(12:64)],ties.method="first")]
full <- full[!is.na(full$primary_topic),]
# Drop unwanted colums
full <- full[,c('AdText','Interests','primary_topic')]
View(full)
unique(subset(full, primary_topic == 'T52')$AdText)
# Load stm model
stm <- readRDS("rds/stm_49_gold.RDS")
# Get and cast theta object from STM
theta <- stm$theta
thetadf <- as.data.frame(theta)
# Name thetadf columns, topic-wise
names(thetadf) <- c('T1', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7', 'T8', 'T9', 'T10',
'T11', 'T12', 'T13', 'T14', 'T15', 'T16', 'T17', 'T18', 'T19',
'T20', 'T21', 'T22', 'T23', 'T24', 'T25', 'T26', 'T27', 'T28',
'T29', 'T30', 'T31', 'T32', 'T33', 'T34', 'T35', 'T36', 'T37',
'T38', 'T39', 'T40', 'T41', 'T42', 'T43', 'T44', 'T45', 'T46',
'T47', 'T48', 'T49')
topics <- cbind(thetadf, out$meta[,"AdID"])
topics <- as.data.frame(topics)
full <- left_join(fb, topics,  by=c("AdID" = "out$meta[, \"AdID\"]"))
# Column for each ad's primary topic
full$"primary_topic" <- colnames(full[,c(12:60)])[max.col(full[,c(12:60)],ties.method="first")]
full <- full[!is.na(full$primary_topic),]
# Drop unwanted colums
full <- full[,c('AdText','Interests','primary_topic')]
unique(subset(full, primary_topic == 'T3')$AdText)
unique(subset(full, primary_topic == 'T44')$AdText)
unique(subset(full, primary_topic == 'T2')$AdText)
unique(subset(full, primary_topic == 'T21')$AdText)
unique(subset(full, primary_topic == 'T46')$AdText)
unique(subset(full, primary_topic == 'T8')$AdText)
unique(subset(full, primary_topic == 'T41')$AdText)
rm(list = ls())
setwd("~/Documents/thesis/data/csv/")
# Libraries
library(stm)
library(furrr)
library(tidyverse)
library(tidytext)
library(ggthemes)
library(scales)
library(knitr)
rm(list = ls())
setwd("~/Documents/thesis/data/csv/")
# Libraries
library(stm)
library(furrr)
library(tidyverse)
library(tidytext)
library(ggthemes)
library(scales)
# Settings
plan(multiprocess)
library(knitr)
# Load and pre-process data
fb <- read.csv("./fb_meta_cleaned.csv")
processed <- textProcessor(documents = fb$AdText, metadata = fb)
out <- prepDocuments(processed$documents, processed$vocab, processed$meta)
docs <- out$documents
vocab <- out$vocab
meta <- out$meta
# Format date
fb$"CreationDate" <- as.Date(strptime(fb$CreationDate, "%m/%d/%y %H:%M:%S"))
many_models <- data_frame(K = c(45,46,47,48,49,50,51)) %>%
mutate(topic_model = future_map(
K, ~stm(docs, vocab, K = ., prevalence =~ Interests + CreationDate, content =~ Interests, data = meta, init.type = "Spectral")))
golder_49 <- stm(docs, vocab, K = 49, prevalence =~ Interests + CreationDate, content =~ Interests, data = meta, init.type = "Spectral")
rm(list = ls())
setwd("~/Documents/thesis/data/csv/")
# Libraries
library(stm)
library(furrr)
library(tidyverse)
library(tidytext)
library(ggthemes)
library(scales)
library(knitr)
# Settings
plan(multiprocess)
# Load and pre-process data
fb <- read.csv("./fb_meta_cleaned.csv")
processed <- textProcessor(documents = fb$AdText, metadata = fb)
out <- prepDocuments(processed$documents, processed$vocab, processed$meta)
docs <- out$documents
vocab <- out$vocab
meta <- out$meta
# golder_49 <- stm(docs, vocab, K = 49, prevalence =~ Interests + CreationDate, content =~ Interests, data = meta, init.type = "Spectral")
many_models <- data_frame(K = c(45,46,47,48,49,50,51)) %>%
mutate(topic_model = future_map(
K, ~stm(docs, vocab, K = ., prevalence =~ Interests, content =~ Interests, data = meta, init.type = "Spectral")))
golder_49 <- stm(docs, vocab, K = 49, prevalence =~ Interests, content =~ Interests, data = meta, init.type = "Spectral")
many_models <- data_frame(K = c(45,46,47,48,49,50,51)) %>%
mutate(topic_model = future_map(
K, ~stm(docs, vocab, K = ., prevalence =~ Interests, data = meta, init.type = "Spectral")))
